<Page
    x:Class="HamburguerMenuPoC.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HamburguerMenuPoC"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converter="using:Microsoft.Toolkit.Uwp.UI.Converters"
    mc:Ignorable="d">

    <Page.Resources>
        <converter:BoolToVisibilityConverter x:Key="ReverseBoolToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed"/>

        <DataTemplate x:Key="HamburgerMenuItemtemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <SymbolIcon Grid.Column="0"                       
                      Symbol="Document"
                      Foreground="Black" />
                <TextBlock Grid.Column="1" 
                       Text="{Binding}" 
                       Foreground="Black" 
                       FontSize="16" 
                       VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>

        <Style TargetType="controls:HamburgerMenu" x:Key="CustomHamburgerMenu">

            <Setter Property="DisplayMode" Value="CompactOverlay" />
            <Setter Property="HamburgerVisibility" Value="Visible"/>
            <Setter Property="IsPaneOpen" Value="False"/>
            
            <Setter Property="HamburgerHeight" Value="48"/>
            <Setter Property="OpenPaneLength" Value="240"/>
            <Setter Property="CompactPaneLength" Value="48"/>
            
            <Setter Property="PaneBackground" Value="LightGray"/>
            <Setter Property="PaneForeground" Value="Black"/>

        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <controls:HamburgerMenu
            UseNavigationViewWhenPossible="{x:Bind ViewModel.UseNavigationViewWhenPossible.Value, Mode=OneWay}"
            ItemClick="HamburgerMenu_ItemClick"
            Style="{StaticResource CustomHamburgerMenu}"
            SelectedItem="{x:Bind ViewModel.Selected, Mode=OneWay}"
            ItemTemplate="{StaticResource HamburgerMenuItemtemplate}"
            ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}">

            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                <ToggleButton Content="UseNavigationViewWhenPossible" IsChecked="{x:Bind ViewModel.UseNavigationViewWhenPossible, Mode=TwoWay}"/>
                <TextBlock Text="Selected Item:" Margin="0,48,0,0" Style="{ThemeResource SubheaderTextBlockStyle}"/>
                <TextBlock Text="{x:Bind ViewModel.Selected, Mode=OneWay}" Style="{ThemeResource HeaderTextBlockStyle}" Margin="0,8,0,0"/>
                <TextBlock Text="Selected Item does not change if UseNavigationViewWhenPossible is checked because ItemClick is never fired." Margin="0,2,0,0" Style="{ThemeResource CaptionTextBlockStyle}" Visibility="{x:Bind ViewModel.UseNavigationViewWhenPossible, Mode=OneWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}" />
            </StackPanel>

        </controls:HamburgerMenu>

    </Grid>
</Page>
